<% config[:vagrantfiles].each do |vagrantfile| %>
require "<%= vagrantfile %>"
<% end %>

<% set_hostname = (config[:vm_hostname] != false) %>
<% if set_hostname %>
Vagrant.configure("2") do |c|
  c.berkshelf.enabled = false if Vagrant.has_plugin?("vagrant-berkshelf")
<% else %>
Vagrant.configure("2") do |vm_instance|
  vm_instance.berkshelf.enabled = false if Vagrant.has_plugin?("vagrant-berkshelf")
<% end %>
<% if (set_hostname and config[:vm_name]) %>
  c.vm.define "<%= config[:vm_name] %>", primary: true do |vm_instance|
<% elsif set_hostname %>
  c.vm.define "kt-<%= File.basename(config[:kitchen_root]) %>-<%= instance.name%>", primary: true do |vm_instance|
<% else # nothing %>
<% end %>
    vm_instance.vm.box = "<%= config[:box] %>"

<% if config[:box_url] %>
    vm_instance.vm.box_url = "<%= config[:box_url] %>"
<% end %>

<% if config[:box_version] %>
    vm_instance.vm.box_version = "<%= config[:box_version] %>"
<% end %>

<% if config[:box_check_update] %>
    vm_instance.vm.box_check_update = "<%= config[:box_check_update] %>"
<% end %>

<% if config[:vm_hostname] %>
    vm_instance.vm.hostname = "<%= config[:vm_hostname] %>"
<% end %>

<% if config[:communicator] %>
    vm_instance.vm.communicator = "<%= config[:communicator] %>"
<% end %>

<% if config[:guest] %>
    vm_instance.vm.guest = "<%= config[:guest] %>"
<% end %>

<% if config[:communicator] %>
  <% if config[:username] %>
      vm_instance.<%= config[:communicator] %>.username = "<%= config[:username] %>"
  <% end %>
  <% if config[:password] %>
      vm_instance.<%= config[:communicator] %>.password = "<%= config[:password] %>"
  <% end %>
<% else %>
  <% if config[:username] %>
      vm_instance.ssh.username = "<%= config[:username] %>"
  <% end %>
  <% if config[:password] %>
      vm_instance.ssh.password = "<%= config[:password] %>"
  <% end %>
<% end %>

<% if config[:ssh_key] %>
    vm_instance.ssh.private_key_path = "<%= config[:ssh_key] %>"
<% end %>
<% config[:ssh].each do |key, value| %>
    vm_intance.ssh.<%= key %> = <%= value %>
<% end %>
<% if config[:winrm] %>
  <% config[:winrm].each do |key, value| %>
      vm_instance.winrm.<%= key %> = <%= value %>
  <% end %>
<% end %>

<% Array(config[:network]).each do |opts| %>
    vm_instance.vm.network(:<%= opts[0] %>, <%= opts[1..-1].join(", ") %>)
<% end %>

    vm_instance.vm.synced_folder ".", "/vagrant", disabled: true
<% config[:synced_folders].each do |source, destination, options| %>
    vm_instance.vm.synced_folder "<%= source %>", "<%= destination %>", <%= options %>
<% end %>

    vm_instance.vm.provider :<%= config[:provider] %> do |p|
<% case config[:provider]
   when "virtualbox", /^vmware_/
     if config[:gui] == true || config[:gui] == false %>
    p.gui = <%= config[:gui] %>
<%   end
   end %>
<% config[:customize].each do |key, value| %>
  <% case config[:provider]
     when "libvirt" %>
    p.<%= key %> = <%= value%>
  <% when "lxc" %>
    <% if key == :container_name %>
    p.container_name = <%= value == ":machine" ? value : "\"#{value}\"" %>
    <% elsif key == :backingstore %>
    p.backingstore = "<%= value %>"
    <% elsif key == :backingstore_options %>
      <% config[:customize][:backingstore_options].each do |opt, opt_val| %>
    p.backingstore_option "--<%= opt %>", "<%= opt_val %>"
      <% end %>
    <% else %>
    p.customize "<%= key %>", "<%= value %>"
    <% end %>
  <% when "managed" %>
    <% if key == :server %>
    p.server = "<%= value %>"
    <% end %>
  <% when "parallels" %>
    p.customize ["set", :id, "--<%= key.to_s.gsub('_', '-') %>", "<%= value %>"]
  <% when "rackspace" %>
    p.<%= key %> = "<%= value%>"
  <% when "softlayer" %>
    <% if key == :disk_capacity %>
    p.<%= key %> = <%= value %>
    <% else %>
    p.<%= key %> = "<%= value %>"
    <% end %>
  <% when "virtualbox" %>
    p.customize ["modifyvm", :id, "--<%= key %>", "<%= value %>"]
  <% when /^vmware_/ %>
    <% if key == :memory %>
      <% unless config[:customize].include?(:memsize) %>
    p.vmx["memsize"] = "<%= value %>"
      <% end %>
    <% elsif key == :cpus %>
      <% unless config[:customize].include?(:numvcpus) %>
    p.vmx["numvcpus"] = "<%= value %>"
      <% end %>
    <% else %>
    p.vmx["<%= key %>"] = "<%= value %>"
    <% end %>
  <% end %>
<% end %>
    end

<% if set_hostname %>
  end
<% end %>
end
